CREATE DATABASE IF NOT EXISTS SaloonManagementSystem;

USE SaloonManagementSystem;

CREATE TABLE IF NOT EXISTS User(
    userId VARCHAR(45) PRIMARY KEY,
    username VARCHAR(45),
    password VARCHAR(45)
);

CREATE TABLE IF NOT EXISTS Orders(
    orderId VARCHAR(45) PRIMARY KEY,
    description VARCHAR(100) NOT NULL ,
    orderDate DATE NOT NULL,
    returnDate DATE,
    userId VARCHAR(45),
    CONSTRAINT FOREIGN KEY(userId) REFERENCES user(userId)
);

CREATE TABLE IF NOT EXISTS Item(
    itemId VARCHAR(45) PRIMARY KEY,
    description VARCHAR(100) NOT NULL,
    qty INT NOT NULL,
    name VARCHAR(45)NOT NULL,
    price DOUBLE NOT NULL,
    img longblob,
    category ENUM('Camera', 'Lens', 'Drones', 'Lighting','Accesories')
);

CREATE TABLE IF NOT EXISTS order_detail(
    orderId VARCHAR(45) NOT NULL,
    itemId VARCHAR(45) NOT NULL,
    CONSTRAINT FOREIGN KEY(orderId) REFERENCES orders(orderId)ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT FOREIGN KEY(itemId) REFERENCES Item(itemId) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Supplier(
    supId VARCHAR(45) PRIMARY KEY,
    name VARCHAR(45) NOT NULL,
    contact VARCHAR(45) NOT NULL,
    address VARCHAR(45) NOT NULL
);

CREATE TABLE IF NOT EXISTS Supplier_order(
    supOrderId VARCHAR(45) PRIMARY KEY,
    description VARCHAR(100) NOT NULL,
    orderDate DATE,
    returnDate DATE,
    category ENUM('Camera', 'Lens', 'Drones', 'Lighting','Accesories'),
    supId VARCHAR(45) NOT NULL,
    CONSTRAINT FOREIGN KEY(supId) REFERENCES supplier(supId) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS supOrderDetail(
    itemId VARCHAR(45) NOT NULL,
    supOrderId VARCHAR(45) NOT NULL,
    CONSTRAINT FOREIGN KEY(itemId) REFERENCES Item(itemId) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT FOREIGN KEY(supOrderId) REFERENCES supplier_order(supOrderId) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Customer(
    cusId VARCHAR(45) PRIMARY KEY,
    name VARCHAR(45) NOT NULL,
    mobile VARCHAR(45) NOT NULL,
    email VARCHAR(45) NOT NULL,
    address VARCHAR(45) NOT NULL
);

ALTER TABLE Orders ADD cusId VARCHAR(45);
ALTER TABLE Orders ADD CONSTRAINT FOREIGN KEY (cusId) REFERENCES customer(cusId) ON UPDATE CASCADE ON DELETE CASCADE;

CREATE TABLE IF NOT EXISTS Packages (
    packageId VARCHAR(45) PRIMARY KEY,
    name VARCHAR(45) NOT NULL,
    price DOUBLE NOT NULL ,
    type VARCHAR(45) NOT NULL
);

CREATE TABLE IF NOT EXISTS Employee(
    empId VARCHAR(45) PRIMARY KEY,
    name VARCHAR(45) NOT NULL,
    mobile VARCHAR(45) NOT NULL,
    salary DOUBLE NOT NULL,
    email VARCHAR(45) NOT NULL,
    type VARCHAR(45) NOT NULL,
    position ENUM('Admin','Cashier','Manager','Worker')
);

select * from employee;


CREATE TABLE IF NOT EXISTS Attendance(
    attId VARCHAR(45) PRIMARY KEY,
    status VARCHAR(45) NOT NULL,
    date DATE NOT NULL,
    time TIME NOT NULL,
    empId VARCHAR(45) NOT NULL,
    CONSTRAINT FOREIGN KEY(empId) REFERENCES Employee(empId) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Booking(
    bookingId VARCHAR(45) PRIMARY KEY,
    eventType VARCHAR(45) NOT NULL,
    date DATE NOT NULL,
    location VARCHAR(45) NOT NULL,
    empId VARCHAR(45) NOT NULL,
    packageId VARCHAR(45) NOT NULL,
    CONSTRAINT FOREIGN KEY(empId) REFERENCES Employee(empId) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT FOREIGN KEY (packageId) REFERENCES Packages(packageId) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS EmpBookingDetail(
    empId VARCHAR(45) NOT NULL,
    bookingId VARCHAR(45) NOT NULL,
    employeeCount INTEGER NOT NULL,
    CONSTRAINT FOREIGN KEY (empId) REFERENCES Employee(empId) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT FOREIGN KEY (bookingId) REFERENCES Booking(bookingId) ON UPDATE CASCADE ON DELETE CASCADE
);